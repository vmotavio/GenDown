unit GenDown;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ComCtrls, Vcl.StdCtrls,
  IdBaseComponent, IdComponent, IdTCPConnection, IdTCPClient, IdHTTP;

type
  TForm1 = class(TForm)
    IdHTTP1: TIdHTTP;
    Label1: TLabel;
    Edit1: TEdit;
    Button1: TButton;
    ProgressBar1: TProgressBar;
    Label2: TLabel;
    procedure Button1Click(Sender: TObject);
    procedure IdHTTP1Work(ASender: TObject; AWorkMode: TWorkMode;
      AWorkCount: Int64);
    procedure IdHTTP1WorkBegin(ASender: TObject; AWorkMode: TWorkMode;
      AWorkCountMax: Int64);
    procedure IdHTTP1WorkEnd(ASender: TObject; AWorkMode: TWorkMode);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

  TMyThread = class (TThread)
  private
  URL : String;
  public constructor Create(URL : String);
    procedure Execute; override;
  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}

procedure TForm1.Button1Click(Sender: TObject);
var
  URL : String;

begin
  TMyThread.Create(Edit1.Text);

end;
procedure TForm1.IdHTTP1Work(ASender: TObject; AWorkMode: TWorkMode;
  AWorkCount: Int64);
begin
  ProgressBar1.Position := AWorkCount;
end;

procedure TForm1.IdHTTP1WorkBegin(ASender: TObject; AWorkMode: TWorkMode;
  AWorkCountMax: Int64);
begin
  ProgressBar1.Position := 0;
  ProgressBar1.Max := AWorkCountMax;
  Label1.caption := 'Download em andamento...';
end;

procedure TForm1.IdHTTP1WorkEnd(ASender: TObject; AWorkMode: TWorkMode);
begin
  ProgressBar1.Position := ProgressBar1.Max;
  Label1.caption := 'Download Concluído!';
end;

{ TMyThread }

constructor TMyThread.Create (URL : String);
begin
  inherited Create(false);
  self.URL := URL;
end;

procedure TMyThread.Execute;
var
  downFile: TFileStream;
  nameFile : String;
begin
  nameFile := 'x.iso';
  try
    DownFile := TFileStream.Create('C:\File'+nameFile, fmCreate);
  finally

  end;
  try
    Form1.IdHTTP1.Get(self.URL, DownFile); // Fazendo o download do arquivo
  finally
    DownFile.Free;
  end;
end;

end.
